{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","curentButton","setButton","reverse","setReverse","currentGoods","sortArr","sort","good1","good2","localeCompare","length","sortGoods","className","onClick","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyBK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1BR,SAAmBJ,EAAcE,GAC/B,IAAMG,EAAO,UAAOR,GAmBpB,OAjBIG,GACFK,EAAQC,MAAK,SAACC,EAAOC,GACnB,OAAQR,GACN,IAAK,UACH,OAAOO,EAAME,cAAcD,GAC7B,IAAK,aACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,SAKXR,GACFG,EAAQH,UAGHG,EAMcM,CAAUX,EAAcE,GAE7C,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAU,YACzBa,KAAK,SACLF,UAAS,yBAAqC,YAAjBZ,GAA8B,YAH7D,iCAQA,wBACEa,QAAS,kBAAMZ,EAAU,eACzBa,KAAK,SACLF,UAAS,4BAAwC,eAAjBZ,GAAiC,YAHnE,4BAQA,wBACEa,QAAS,kBAAMV,GAAYD,IAC3BY,KAAK,SACLF,UAAS,6BAAwBV,GAAW,YAH9C,sBAQEF,GAAgBE,IAEd,wBACEW,QAAS,WACPZ,EAAU,IACVE,GAAW,IAGbW,KAAK,SACLF,UAAU,4BAPZ,sBAcN,6BACGR,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxFjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bc60b39f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nfunction sortGoods(curentButton, reverse) {\n  const sortArr = [...goodsFromServer];\n\n  if (curentButton) {\n    sortArr.sort((good1, good2) => {\n      switch (curentButton) {\n        case 'is-info':\n          return good1.localeCompare(good2);\n        case 'is-success':\n          return good1.length - good2.length;\n        default:\n          return null;\n      }\n    });\n  }\n\n  if (reverse) {\n    sortArr.reverse();\n  }\n\n  return sortArr;\n}\n\nexport const App = () => {\n  const [curentButton, setButton] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const currentGoods = sortGoods(curentButton, reverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setButton('is-info')}\n          type=\"button\"\n          className={`button is-info ${curentButton !== 'is-info' && 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setButton('is-success')}\n          type=\"button\"\n          className={`button is-success ${curentButton !== 'is-success' && 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={`button is-warning ${!reverse && 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {(curentButton || reverse)\n          && (\n            <button\n              onClick={() => {\n                setButton('');\n                setReverse(false);\n              }\n              }\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {currentGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}