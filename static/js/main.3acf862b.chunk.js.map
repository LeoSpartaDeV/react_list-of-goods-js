{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_LENGTH","App","useState","sortBy","setSortBy","isReversed","setIsReversed","currentGoods","sortArr","sort","good1","good2","localeCompare","length","reverse","sortGoods","className","onClick","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,UACtBC,EAAc,aAyBb,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAmBJ,EAAQE,GACzB,IAAMG,EAAO,UAAOV,GAmBpB,OAjBIK,GACFK,EAAQC,MAAK,SAACC,EAAOC,GACnB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,SAKXR,GACFG,EAAQM,UAGHN,EAMcO,CAAUZ,EAAQE,GAWvC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAUL,IACzBmB,KAAK,SACLF,UAAS,yBAAoBb,IAAWJ,GAAuB,YAHjE,iCAQA,wBACEkB,QAAS,kBAAMb,EAAUJ,IACzBkB,KAAK,SACLF,UAAS,4BAAuBb,IAAWH,GAAe,YAH5D,4BAQA,wBACEiB,QAxBR,WACEX,GAAeD,IAwBTa,KAAK,SACLF,UAAS,6BAAwBX,GAAc,YAHjD,sBAQEF,GAAUE,IAER,wBACEY,QAvCZ,WACEb,EAAU,IACVE,GAAc,IAsCJY,KAAK,SACLF,UAAU,4BAHZ,sBAUN,6BACGT,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3acf862b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'is-info';\nconst SORT_LENGTH = 'is-success';\n\nfunction sortGoods(sortBy, isReversed) {\n  const sortArr = [...goodsFromServer];\n\n  if (sortBy) {\n    sortArr.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return null;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortArr.reverse();\n  }\n\n  return sortArr;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const currentGoods = sortGoods(sortBy, isReversed);\n\n  function reset() {\n    setSortBy('');\n    setIsReversed(false);\n  }\n\n  function changeReversed() {\n    setIsReversed(!isReversed);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortBy(SORT_ALPHABETICALLY)}\n          type=\"button\"\n          className={`button is-info ${sortBy !== SORT_ALPHABETICALLY && 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortBy(SORT_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${sortBy !== SORT_LENGTH && 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={changeReversed}\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed)\n          && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {currentGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}